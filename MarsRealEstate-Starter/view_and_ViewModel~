
現行

Detail  ViewModel
 selectedProperty: LiveData<MarsProperty>
 displayPropertyPrice = transformations.map(selectedProperty)
 displayPropertyType  = transfofmations.map(selectedProperty)

Detail  View
 ImageView    app:imageUrl="@{viewModel.selectedProperty.imgSrcUrl}"
 TextView     android:text="@{viewModel.displayPropertyType}"
 TextView     android:text="@{viewModel.displayPropertyPrice}"

Overview ViewModel
 status: LiveData<MarsApiStatus>
 properties: LiveData<List<MarsProperty>>

Overview View

 RecyclerView app:listData="@{viewModel.properties}"
 ImageView    app:marsApiStatus="@{viewModel.status}"

Gridview View (property is MarsProperty)

 ImageView    app:imageUrl="@{property.imgSrcUrl}"
 ImageView    android:visibility="@{property.rental ? View.GONE : View.VISIBLE}"

変更したいView
RecyclerViewでConstraintView
 ImageView    app:imageUrl="@{property.imgSrcUrl}"
 ImageView    app:imageUrl="@{property.imgSrcUrl}"
 TextView     android:text="@{viewModel.displayPropertyType}"
 TextView     android:text="@{viewModel.displayPropertyPrice}"


----
@Parcelize
data class MarsProperty(
        val id: String,
        // used to map img_src from the JSON to imgSrcUrl in our class
        @Json(name = "img_src") val imgSrcUrl: String,
        val type: String,
        val price: Double) : Parcelable {
    val isRental
        get() = type == "rent"
}